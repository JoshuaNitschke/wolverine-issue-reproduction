// <auto-generated/>
#pragma warning disable
using Microsoft.AspNetCore.Routing;
using System;
using System.Linq;
using Wolverine.Http;

namespace Internal.Generated.WolverineHandlers
{
    // START: GET_problem_details_1
    public class GET_problem_details_1 : Wolverine.Http.HttpHandler
    {
        private readonly Wolverine.Http.WolverineHttpOptions _wolverineHttpOptions;

        public GET_problem_details_1(Wolverine.Http.WolverineHttpOptions wolverineHttpOptions) : base(wolverineHttpOptions)
        {
            _wolverineHttpOptions = wolverineHttpOptions;
        }



        public override async System.Threading.Tasks.Task Handle(Microsoft.AspNetCore.Http.HttpContext httpContext)
        {
            var problemDetails1Endpoint = new WolverineIssueReproduction.WebApi.Controllers.ProblemDetails1Endpoint();
            var problemDetails = problemDetails1Endpoint.Before();
            // Evaluate whether the processing should stop if there are any problems
            if (!(ReferenceEquals(problemDetails, Wolverine.Http.WolverineContinue.NoProblems)))
            {
                await Microsoft.AspNetCore.Http.Results.Problem(problemDetails).ExecuteAsync(httpContext).ConfigureAwait(false);
                return;
            }


            var result_of_Get = problemDetails1Endpoint.Get();
            await WriteString(httpContext, result_of_Get);
        }

    }

    // END: GET_problem_details_1
    
    
}

